name: CI/CD Pipeline

on:
  push:
    branches:
      - jeontak/concurrency

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 리포지토리 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Gradle 빌드
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      # 4. AWS 자격 증명 설정
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 5. Amazon ECR 로그인
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: true

      # 6. Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image to ECR
        run: |
          docker build -t myapp:latest .
          docker tag myapp:latest 418295688701.dkr.ecr.ap-northeast-2.amazonaws.com/plus-project-jeontak:latest
          docker push 418295688701.dkr.ecr.ap-northeast-2.amazonaws.com/plus-project-jeontak:latest

      # 7. Amazon ECS에 배포
      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-definition.json
          service: arn:aws:ecs:ap-northeast-2:418295688701:service/plus-project-jeontak/plus-project-service
          cluster: arn:aws:ecs:ap-northeast-2:418295688701:cluster/plus-project-jeontak
          wait-for-service-stability: true
