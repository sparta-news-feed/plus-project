name: CI/CD Pipeline
on:
  push:
    branches:
      - jeonjiho/ci-cd
env:
  SPRING_REDIS_HOST: redis
  SPRING_REDIS_PORT: 6379
  SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/plus_project
  SPRING_DATASOURCE_USERNAME: root
  SPRING_DATASOURCE_PASSWORD: 1234
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Install docker-compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.7/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build with Gradle (no tests)
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      - name: Start Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d

      - name: Wait for services
        run: |
          sleep 10    

      - name: Test with Gradle
        run: |
          ./gradlew test

      - name: Stop Docker Compose
        if: always()
        run: |
          docker-compose -f docker-compose.yml down
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/jeonjiho/ci-cd'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and Push Docker Image
        run: |
          docker build -t myapp:latest .
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker tag myapp:latest ${{ secrets.DOCKER_USERNAME }}/myapp:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest