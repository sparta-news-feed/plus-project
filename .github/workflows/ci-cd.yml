name: CI/CD Pipeline

on:
  push:
    branches:
      - jeonjiho/ci-cd

env:
  SPRING_DATASOURCE_HOST: db
  SPRING_REDIS_HOST: redis
  SPRING_REDIS_PORT: 6379
  SPRING_DATASOURCE_USERNAME: root
  SPRING_DATASOURCE_PASSWORD: 1234
  JWT_SECRET_KEY: "your-test-secret-key"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Install docker-compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.7/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build with Gradle (no tests)
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      - name: Start Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d

      - name: Wait for services
        run: |
          until docker-compose -f docker-compose.yml exec -T db mysqladmin ping -h db -u root -p1234; do echo "Waiting for MySQL..."; sleep 1; done
          until docker-compose -f docker-compose.yml exec -T redis redis-cli ping; do echo "Waiting for Redis..."; sleep 1; done

      - name: Debug services
        run: |
          docker-compose -f docker-compose.yml ps
          docker-compose -f docker-compose.yml logs db
          docker-compose -f docker-compose.yml logs redis
          docker-compose -f docker-compose.yml exec -T db mysql -u root -p1234 -h db -e "SHOW DATABASES; SHOW TABLES FROM plus_project;"
          echo "SPRING_DATASOURCE_HOST=$SPRING_DATASOURCE_HOST"
          echo "SPRING_REDIS_HOST=$SPRING_REDIS_HOST"
          # 연결 테스트 추가
          docker-compose -f docker-compose.yml exec -T db mysql -u root -p1234 -h db -e "SELECT 1;"
          docker-compose -f docker-compose.yml exec -T redis redis-cli -h redis ping

      - name: Test with Gradle
        run: |
          ./gradlew test -Djwt.secret.key=$JWT_SECRET_KEY

      - name: Stop Docker Compose
        if: always()
        run: |
          docker-compose -f docker-compose.yml down

      - name: Upload test reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: build/reports/tests/test/